untyped
global function GetClientWeapons_ShopTest

struct ShopWeaponData
{
    int ammo,
    int maxAmmo,
    string className,
    array<string> mods
    array<string> allMods
}

void function GetClientWeapons_ShopTest()
{
    entity weapon = GetLocalClientPlayer().GetMainWeapons()[0]
    ShopWeaponData primary
    primary.ammo = weapon.GetWeaponPrimaryAmmoCount()
    primary.maxAmmo = weapon.GetWeaponSettingInt(eWeaponVar.ammo_stockpile_max)
    if (weapon.GetLifetimeShotsRemaining() != -1)
    {
        primary.ammo = weapon.GetLifetimeShotsRemaining()
        primary.maxAmmo = weapon.GetWeaponSettingInt(eWeaponVar.lifetime_shots_default)
    }
    primary.className = weapon.GetWeaponClassName()
    PassModsToUI(false, weapon)

    weapon = GetLocalClientPlayer().GetMainWeapons()[1]
    ShopWeaponData secondary
    secondary.ammo = weapon.GetWeaponPrimaryAmmoCount()
    secondary.maxAmmo = weapon.GetWeaponSettingInt(eWeaponVar.ammo_stockpile_max)
    if (weapon.GetLifetimeShotsRemaining() != -1)
    {
        secondary.ammo = weapon.GetLifetimeShotsRemaining()
        secondary.maxAmmo = weapon.GetWeaponSettingInt(eWeaponVar.lifetime_shots_default)
    }
    secondary.className = weapon.GetWeaponClassName()
    PassModsToUI(true, weapon)

    RunUIScript( "SetClientWeaponData", false, primary.className, primary.ammo, primary.maxAmmo )
    RunUIScript( "SetClientWeaponData", true, secondary.className, secondary.ammo, secondary.maxAmmo )
    RunUIScript( "SetClientWeapons_ShopTest" )
}

void function PassModsToUI(bool isSecondary, entity weapon)
{
    array<string> mods = weapon.GetMods()

    string serStr = ""
    foreach ( string mod in mods )
        serStr += mod + "\n"
    
    RunUIScript( "AddModsToWeapon_ShopTest", isSecondary, serStr )
}
